
IPV4_LOCAL="__IPV4_ADDRESS__/32"
IPV6_LOCAL="__IPV6_ADDRESS__/128"
NAT64_NETWORK="__NAT64_NETWORK__"

# Flush
ipfw -q flush
ipfw -q nat64lsn NAT64 destroy

# Create nat64 instance
ipfw nat64lsn NAT64 create log prefix4 ${IPV4_LOCAL} prefix6 64:ff9b::/96

# Allow established connections
ipfw add check-state

# Allow icmp6 neighbour advertisment 
ipfw add allow icmp6 from any to any icmp6types 135,136

# Allow incoming icmp echo-requests (need keep-state to allow icmp from nat64)
ipfw add allow icmp from any to ${IPV4_LOCAL} icmptypes 8 keep-state

# Allow incoming SSH/DNS (IPv4)
ipfw add allow ip4 from any to ${IPV4_LOCAL} 22
ipfw add allow ip4 from any to ${IPV4_LOCAL} 53

# Enable NAT64
ipfw add nat64lsn NAT64 log ip6 from ::1 to 64:ff9b::/96 in
ipfw add nat64lsn NAT64 log ip6 from ${IPV6_LOCAL} to 64:ff9b::/96 in
ipfw add nat64lsn NAT64 log ip6 from ${NAT64_NETWORK} to 64:ff9b::/96 in
ipfw add nat64lsn NAT64 log ip4 from any to ${IPV4_LOCAL} in

# Allow outgoing IPv4 (keep-state to skip nat64)
ipfw add allow ip4 from ${IPV4_LOCAL} to any keep-state

# Set NAT64 route
route -6 add 64:ff9b::/96 fe80::1%lo0 

# Enable direct output
sysctl net.inet.ip.fw.nat64_direct_output=1

